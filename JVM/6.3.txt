#class文件格式的结构
**class文件采用类似C语言伪结构——两种数据类型：无符号数u1，u2，u4，u8（表示1，2，4，8个字节）与表（多个数据的集合）**
<br/>
###魔数与class文件的版本 <br/>
1. class文件的头4个字节称为魔数，用于确定该文件是否是能被虚拟机接收的class文件，是0XCAFEBABE<br/>
2. 跟在魔数后面的4个字节是class文件的版本号，前两个字节是minor_version（次版本号），后两个是major_version（主版本号）。例如JDK1.8是10进制的52.版本号只能兼容以前的class文件版本。如JDK1.7只能检测执行51版本之前的class文件，不能执行52版本的class文件<br/>
###常量池<br/>
**常量池可以理解为class文件中的资源库，与其他项目关联最多的数据类型，也是占class文件空间最大的数据项目之一，也是class中出现的第一个表类型项目**<br/>
**常量池主要存放两大类常量——字面量（Literal）与符号引用（Symbolic Reference）。字面量比较接近java中的常量概念：如字符串或定义为final的常量值等；而符号引用比较接近编译方面的概念，包含三类：类和接口的全限定名，方法和方法的描述法，字段与字段的描述符**<br/>
1. 代表常量池常量数量的计数值（constant_pool_count），U2类型，唯一是从1开始计数的，常量个数是constant_pool_count-1.<br/>
2. 常量池中每一项常量都是一个表。JDK1.7前共有11种，之前又引进了三种。 





	